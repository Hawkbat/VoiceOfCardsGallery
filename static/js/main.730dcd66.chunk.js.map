{"version":3,"sources":["App.tsx","data/card_name_text.csv","data/card_desc_text.csv","data/card_mst.csv","data/item_mst.csv","data/collection_mst.csv","data/skill_mst.csv","index.tsx"],"names":["CardType","CollectionType","ItemType","ElementType","fetchCsv","uri","a","fetch","text","lines","parseCsv","csv","i","values","replaceAll","length","commaIndex","indexOf","lineIndex","nextComma","nextLine","nextSeparator","Math","min","closingQuote","push","substring","substitute","s","names","replace","_","id","get","parseInt","int","ints","split","map","reactJsonReplacer","k","v","Array","isArray","o","props","deepEqual","b","JSON","stringify","getActualCardSides","c","descs","name","nameId","desc","descId","front","type","images","land","back","CardSideBox","memo","card","side","className","src","alt","dangerouslySetInnerHTML","__html","undefined","atk","def","spd","vit","gems","fill","CardBox","flip","zoom","onClick","children","style","transform","random","CollectionCardBox","item","cards","items","skills","useState","flipped","setFlipped","cardId","canFlip","Characters","Monsters","KeyItemsAlt","CharactersAlt","Ending","altCard","cardIdBack","Equipment","equip","Skills","skill","cost","descBack","infoName","infoDesc","infoDescBack","descIdBack","includes","f","Info","App","Map","cardNames","setCardNames","cardDescs","setCardDescs","setCards","setItems","setSkills","collectionItems","setCollectionItems","window","location","hash","substr","Items","collectionType","setCollectionType","useEffect","cardNameUri","cardNamesCsv","r","set","cardDescUri","cardDescsCsv","cardUri","cardsCsv","overlays","backOverlays","field2","field10","itemUri","itemsCsv","isTorch","field4","buy","sell","useType","field8","field13","users","skillUri","skillsCsv","element","field5","field6","field7","collectionUri","collectionItemsCsv","fields","handler","scrollTo","addEventListener","removeEventListener","Object","filter","reverse","href","obj","Menu","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.730dcd66.chunk.js","sourcesContent":["import React, { memo, useEffect, useState } from 'react'\nimport './App.css'\nimport cardNameUri from './data/card_name_text.csv'\nimport cardDescUri from './data/card_desc_text.csv'\nimport cardUri from './data/card_mst.csv'\nimport itemUri from './data/item_mst.csv'\nimport collectionUri from './data/collection_mst.csv'\nimport skillUri from './data/skill_mst.csv'\n\nasync function fetchCsv(uri: string): Promise<string[][]> {\n  const text = await (await fetch(uri)).text()\n  const lines = parseCsv(text)\n  return lines\n}\n\nfunction parseCsv(csv: string): string[][] {\n  let i = 0\n  const lines = []\n  let values = []\n  csv = csv.replaceAll('\\r\\n', '\\n')\n  while (i < csv.length) {\n    const commaIndex = csv.indexOf(',', i)\n    const lineIndex = csv.indexOf('\\n', i)\n    const nextComma = commaIndex < 0 ? csv.length : commaIndex\n    const nextLine = lineIndex < 0 ? csv.length : lineIndex\n    const nextSeparator = Math.min(nextComma, nextLine)\n\n    if (csv[i] === '\"') {\n      let closingQuote = csv.indexOf('\"', i + 1)\n      while (csv[closingQuote + 1] === '\"')\n        closingQuote = csv.indexOf('\"', closingQuote + 2)\n      values.push(csv.substring(i + 1, closingQuote).replaceAll('\"\"', '\"'))\n      i = closingQuote + 1\n    } else {\n      values.push(csv.substring(i, nextSeparator))\n      i = nextSeparator + 1\n    }\n\n    if (nextLine < nextComma || i >= csv.length) {\n      lines.push(values)\n      values = []\n    }\n  }\n  return lines\n}\n\ninterface Card {\n  id: number\n  type: CardType\n  nameId: number\n  descId: number\n  front: string\n  overlays: string[]\n  land: string\n  back: string\n  backOverlays: string[]\n  field2: number\n  field10: boolean\n}\n\ninterface CardSide {\n  type: CardType\n  name: string\n  desc: string\n  atk?: number\n  def?: number\n  spd?: number\n  vit?: number\n  gems?: number\n  images: string[]\n}\n\nenum CardType {\n  Character = 1,\n  Monster = 2,\n  Skill = 3,\n  Item = 4,\n  Land = 5,\n  Equipment = 9,\n  Status = 10,\n  Ending = 11,\n  Passive = 12,\n  Dialogue = 20,\n  Info = 30,\n  Popup = 31,\n  Mystery = 35,\n  Money = 41,\n  MysteryHint = 42,\n  Customization = 45,\n  Chapter = 46,\n  Objective = 50,\n  CustomizeOff = 62,\n  PlayingCard = 70,\n  PlayingEvent = 71,\n  Menu = 98,\n  BattleResult = 99,\n  CustomizeDesc = 111,\n  CustomizeInfo = 140,\n}\n\ninterface CollectionItem {\n  id: number\n  type: CollectionType\n  cardId: number\n  cardIdBack: number\n  nameId: number\n  descId: number\n  descIdBack: number\n  fields: string[]\n}\n\nenum CollectionType {\n  Items = 0,\n  Equipment = 1,\n  KeyItems = 2,\n  KeyItemsAlt = KeyItems + 10,\n  Characters = 3,\n  CharactersAlt = Characters + 10,\n  Monsters = 4,\n  Skills = 5,\n  Ending = 6,\n  Movies = 7,\n}\n\ninterface Item {\n  id: number\n  cardId: number\n  isTorch: boolean\n  type: ItemType\n  field4: number\n  buy: number\n  sell: number\n  useType: number\n  field8: number\n  atk: number\n  def: number\n  spd: number\n  vit: number\n  field13: number[]\n  users: number[]\n}\n\nenum ItemType {\n  Item = 1,\n  Equipment = 2,\n  KeyItem = 3,\n  Customization = 4,\n}\n\ninterface Skill {\n  id: number\n  cardId: number\n  element: ElementType\n  cost: number\n  field4: number\n  field5: number\n  field6: number\n  field7: number\n}\n\nenum ElementType {\n  None = 0,\n  Fire = 1,\n  Water = 2,\n  Bolt = 3,\n  Wind = 4,\n  Light = 5,\n  Dark = 6,\n}\n\nfunction substitute(s: string, names: Map<number, string>) {\n  s = s.replace(/{CARDNAME:(\\d+)}/g, (_, id) => names.get(parseInt(id)) ?? '')\n  s = s.replace(/<IME(\\d+)>/g, '')\n  s = s.replace(/<highlight>(.*)<\\/highlight>/g, (_, text) => `<b>${text}</b>`)\n  //s = s.replaceAll('<', '&lt;').replaceAll('>', '&gt;')\n  return s\n}\n\nfunction formatEnum<K extends number, T extends Record<K, string>>(v: K, obj: T): string {\n  return obj[v].replace(/([a-z])([A-Z])/g, (_, a, b) => `${a} ${b}`)\n}\n\nfunction int(s: string): number {\n  return s ? parseInt(s, 10) : 0\n}\n\nfunction ints(s: string): number[] {\n  return s ? s.split('@').map(s => int(s)) : []\n}\n\nfunction reactJsonReplacer(this: any, k: string, v: any): any {\n  if (k === 'children') {\n    if (!v) return v\n    if (Array.isArray(v)) return v.map(o => o.props)\n    else return v.props\n  }\n  return v\n}\n\nfunction deepEqual<T>(a: T, b: T): boolean {\n  return JSON.stringify(a, reactJsonReplacer) === JSON.stringify(b, reactJsonReplacer)\n}\n\nfunction getInfoCardSides(name: string, desc: string, descBack: string): { front: CardSide, back: CardSide } {\n  return {\n    front: {\n      type: CardType.Info,\n      name,\n      desc,\n      images: ['ca-01_img_card_text-01-02'],\n    },\n    back: {\n      type: CardType.Info,\n      name,\n      desc: descBack,\n      images: ['ca-01_img_card_text-01-02'],\n    },\n  }\n}\n\nfunction getMenuCardSides(name: string): { front: CardSide, back: CardSide } {\n  return {\n    front: {\n      type: CardType.Menu,\n      name,\n      desc: '',\n      images: ['ca-01_img_menu_front'/*, 'ca-01_img_menu_front_gold'*/],\n    },\n    back: {\n      type: CardType.Menu,\n      name,\n      desc: '',\n      images: ['ca-01_img_menu_reverse'/*, 'ca-01_img_menu_reverse_gold'*/],\n    },\n  }\n}\n\nfunction getActualCardSides(c: Card, names: Map<number, string>, descs: Map<number, string>): { front: CardSide, back: CardSide } {\n  const name = substitute((c.nameId ? names.get(c.nameId) : null) ?? names.get(c.id) ?? '', names)\n  const desc = substitute((c.descId ? descs.get(c.descId) : null) ?? descs.get(c.id) ?? '', names)\n\n  return {\n    front: {\n      type: c.type,\n      name,\n      desc,\n      images: [c.land, c.front/*, ...c.overlays*/],\n    },\n    back: {\n      type: c.type,\n      name: '',\n      desc: '',\n      images: [c.back/*, ...c.backOverlays*/],\n    },\n  }\n}\n\nconst CardSideBox = memo(function CardSideBox({ card, side }: { card: CardSide, side: 'front' | 'back' }) {\n  return <div className={`${side} CardType${card.type}`}>\n    {card.images.map(o => o ? <img key={o} src={`images/${o}.png`} alt=\"\" /> : null)}\n    {card.name && <div className=\"CardName\" dangerouslySetInnerHTML={{ __html: card.name }}></div>}\n    {card.desc && <div className=\"CardDesc\" dangerouslySetInnerHTML={{ __html: card.desc }}></div>}\n    {card.atk !== undefined && <div className=\"CardATK\">{`${card.atk >= 0 ? '+' : ''}${card.atk}`}</div>}\n    {card.def !== undefined && <div className=\"CardDEF\">{`${card.def >= 0 ? '+' : ''}${card.def}`}</div>}\n    {card.spd !== undefined && <div className=\"CardSPD\">{`${card.spd >= 0 ? '+' : ''}${card.spd}`}</div>}\n    {card.vit !== undefined && <div className=\"CardVIT\">{`${card.vit >= 0 ? '+' : ''}${card.vit}`}</div>}\n    {card.gems && <div className=\"CardGems\">{new Array(card.gems).fill(0).map((_, i) => <div key={i} className=\"CardGem\" />)}</div>}\n  </div>\n}, deepEqual)\n\nconst CardBox = memo(function CardBox({ front, back, flip, zoom, onClick, children }: { front: CardSide | null, back: CardSide | null, flip?: boolean, zoom?: boolean, onClick?: () => void, children?: React.ReactNode }) {\n  return <div className={`CardBox ${zoom ? 'zoom' : ''}`} onClick={() => onClick?.()} style={{ transform: `rotate(${-2 + Math.random() * 4}deg)` }}>\n    {children}\n    <div className={`Card ${flip ? 'flip' : ''}`}>\n      {front && <CardSideBox side=\"front\" card={front} />}\n      {back && <CardSideBox side=\"back\" card={back} />}\n    </div>\n  </div>\n}, deepEqual)\n\nconst CollectionCardBox = memo(function CollectionCardBox({ item, cards, items, skills, names, descs }: { item: CollectionItem, cards: Map<number, Card>, items: Map<number, Item>, skills: Map<number, Skill>, names: Map<number, string>, descs: Map<number, string> }) {\n  const [flipped, setFlipped] = useState(false)\n  const card = cards.get(item.cardId)\n  if (!card) return null\n  let { front, back } = getActualCardSides(card, names, descs)\n  let canFlip = false\n  switch (item.type) {\n    case CollectionType.Characters:\n    case CollectionType.Monsters:\n    case CollectionType.KeyItemsAlt:\n      front.name = ''\n      front.desc = ''\n      break\n    case CollectionType.CharactersAlt:\n      canFlip = true\n      break\n    case CollectionType.Ending:\n      const altCard = cards.get(item.cardIdBack)\n      if (altCard) back = getActualCardSides(altCard, names, descs).front\n      canFlip = true\n      break\n    case CollectionType.Equipment:\n      const equip = items.get(item.cardId)\n      if (equip) front = { ...front, atk: equip.atk, def: equip.def, spd: equip.spd, vit: equip.vit }\n      break\n    case CollectionType.Skills:\n      const skill = skills.get(item.cardId)\n      if (skill) front.gems = skill.cost\n      break\n  }\n  let infoName = ''\n  let infoDesc = ''\n  let infoDescBack = ''\n  switch (item.type) {\n    case CollectionType.Characters:\n    case CollectionType.CharactersAlt:\n    case CollectionType.Monsters:\n      infoName = substitute(names.get(item.nameId) ?? '', names)\n      infoDesc = substitute(descs.get(item.descId) ?? '', names)\n      infoDescBack = substitute(descs.get(item.descIdBack) ?? '', names)\n      break\n  }\n  return <CardBox front={front} back={canFlip ? back : null} flip={flipped && canFlip} zoom onClick={() => [CollectionType.Characters, CollectionType.CharactersAlt, CollectionType.Monsters, CollectionType.Ending].includes(item.type) && setFlipped(f => !f)}>\n    {infoName || infoDesc || infoDescBack ? <div className=\"InfoCard\"><CardBox {...getInfoCardSides(infoName, infoDesc, infoDescBack)} flip={flipped}></CardBox></div> : null}\n  </CardBox>\n}, deepEqual)\n\nfunction App() {\n  const [cardNames, setCardNames] = useState<Map<number, string>>(new Map())\n  const [cardDescs, setCardDescs] = useState<Map<number, string>>(new Map())\n  const [cards, setCards] = useState<Map<number, Card>>(new Map())\n  const [items, setItems] = useState<Map<number, Item>>(new Map())\n  const [skills, setSkills] = useState<Map<number, Skill>>(new Map())\n  const [collectionItems, setCollectionItems] = useState<CollectionItem[]>([])\n  const [collectionType, setCollectionType] = useState(window.location.hash ? window.location.hash.substr(1) : CollectionType[CollectionType.Items])\n\n  useEffect(() => {\n    (async function () {\n      const cardNamesCsv = await fetchCsv(cardNameUri)\n      const cardNames = new Map<number, string>()\n      for (const r of cardNamesCsv) cardNames.set(int(r[0]), r[1])\n      setCardNames(cardNames)\n\n      const cardDescsCsv = await fetchCsv(cardDescUri)\n      const cardDescs = new Map<number, string>()\n      for (const r of cardDescsCsv) cardDescs.set(int(r[0]), r[1])\n      setCardDescs(cardDescs)\n\n      const cardsCsv = await fetchCsv(cardUri)\n      const cards = new Map<number, Card>()\n      for (const r of cardsCsv) cards.set(int(r[0]), { id: int(r[0]), type: int(r[1]), nameId: int(r[3]), descId: int(r[4]), land: r[5], front: r[6], overlays: r[7].split('@'), back: r[8], backOverlays: r[9].split('@'), field2: int(r[2]), field10: r[10] === '1' })\n      setCards(cards)\n\n      const itemsCsv = await fetchCsv(itemUri)\n      const items = new Map<number, Item>()\n      for (const r of itemsCsv) items.set(int(r[0]), { id: int(r[0]), cardId: int(r[1]), isTorch: r[2] === '1', type: int(r[3]), field4: int(r[4]), buy: int(r[5]), sell: int(r[6]), useType: int(r[7]), field8: int(r[8]), atk: int(r[9]), def: int(r[10]), spd: int(r[11]), vit: int(r[12]), field13: ints(r[13]), users: ints(r[14]) })\n      setItems(items)\n\n      const skillsCsv = await fetchCsv(skillUri)\n      const skills = new Map<number, Skill>()\n      for (const r of skillsCsv) skills.set(int(r[1]), { id: int(r[0]), cardId: int(r[1]), element: int(r[2]), cost: r[3] ? int(r[3].split(':')[1]) : 0, field4: int(r[4]), field5: int(r[5]), field6: int(r[6]), field7: int(r[7]) })\n      setSkills(skills)\n\n      const collectionItemsCsv = await fetchCsv(collectionUri)\n      const collectionItems: CollectionItem[] = []\n      for (const r of collectionItemsCsv) collectionItems.push({ id: int(r[0]), type: int(r[1]), cardId: int(r[2]), cardIdBack: int(r[3]), nameId: int(r[4]), descId: int(r[6]), descIdBack: int(r[7]), fields: r })\n      setCollectionItems(collectionItems)\n    })()\n  }, [])\n\n  useEffect(() => {\n    const handler = () => {\n      setCollectionType(window.location.hash ? window.location.hash.substr(1) : CollectionType[CollectionType.Items])\n      window.scrollTo(0, 0)\n    }\n    window.addEventListener('hashchange', handler)\n    return () => {\n      window.removeEventListener('hashchange', handler)\n    }\n  }, [])\n\n  return <div className=\"App\">\n    <div className=\"LeftMenu\">\n      {(Object.values(CollectionType) as CollectionType[]).filter(c => c < 10).reverse().map(c => <a key={c} href={`#${CollectionType[c]}`} className=\"MenuCard\">\n        <CardBox {...getMenuCardSides(formatEnum(c, CollectionType))} flip={collectionType !== CollectionType[c]} onClick={() => { window.location.hash = CollectionType[c]; window.scrollTo(0, 0) }} />\n      </a>)}\n    </div>\n    {(collectionType === CollectionType[CollectionType.Characters] || collectionType === CollectionType[CollectionType.Monsters]) && <div className=\"RightMenu\" />}\n    <div className=\"Content\">\n      <div id={`${collectionType}List`} className=\"CardList\" key={collectionType}>\n        {collectionItems.filter(i => CollectionType[i.type % 10] === collectionType).map(c => <CollectionCardBox key={c.id} item={c} cards={cards} items={items} skills={skills} names={cardNames} descs={cardDescs} />)}\n      </div>\n    </div>\n    <div className=\"Footer\">\n      This website is a fan-produced derivative work. All artwork, text, iconography, and other content are copyright © 2021 SQUARE ENIX CO., LTD.\n    </div>\n  </div>\n}\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/card_name_text.fec19df2.csv\";","export default __webpack_public_path__ + \"static/media/card_desc_text.c00bd60b.csv\";","export default __webpack_public_path__ + \"static/media/card_mst.28478861.csv\";","export default __webpack_public_path__ + \"static/media/item_mst.48b34c28.csv\";","export default __webpack_public_path__ + \"static/media/collection_mst.8344759d.csv\";","export default __webpack_public_path__ + \"static/media/skill_mst.bb35f108.csv\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}